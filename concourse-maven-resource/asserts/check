#!/bin/bash -eu

set -e -u

exec 3>&1 # make stdout available as fd 3 for the result
#exec 1>&2 # redirect all output to stderr for logging
exec 1>/var/log/check.log
INPUT="$(cat)"
getParameter() {
  echo "$INPUT" | jq --raw-output $1
}

GET_PASSWORD="$(getParameter .source.get.password)"
GET_USERNAME="$(getParameter .source.get.username)"

GET_REPOSITORY="$(getParameter .source.get.repository)"
GET_GROUP="$(getParameter .source.get.group)"
GET_ARTIFACT="$(getParameter .source.get.artifact)"
GET_LASTUPDATE="$(getParameter .source.get.lastupdate)"
GET_REGEX="$(getParameter .source.get.regex)"

# from version
VERSION="$(getParameter .version.version)"


lastUpdated=""

if [[ "$(getParameter .source.get)" != null  ]]; then 
METADATA_URL="${GET_REPOSITORY}/${GET_GROUP//.//}/${GET_ARTIFACT}/maven-metadata.xml"
VERSION_RANGE_SELECTOR="$"
res="$(curl -k -u "$GET_USERNAME:$GET_PASSWORD"  --fail "$METADATA_URL")"
[[ "$GET_LASTUPDATE" != null ]] && lastUpdated=",\"updated\":\"$( xmlstarlet sel --template --value-of /metadata/versioning/lastUpdated <<<"$res")\"" 
if [[ "$GET_REGEX" != null ]]; then 
echo "$res" \
  | xmlstarlet sel --template --value-of /metadata/versioning/versions/version \
  | grep -e "$(getParameter .source.get.regex)" \
  | sed -n "${VERSION_RANGE_SELECTOR}p" \
  | sed "s/.*/{ \"version\": \"&\" $lastUpdated }/" \
  | jq --slurp . >&3
  exit 0
else
echo "$res" \
  | xmlstarlet sel --template --value-of /metadata/versioning/versions/version \
  | sed -n "${VERSION_RANGE_SELECTOR}p" \
  | sed "s/.*/{ \"version\": \"&\" $lastUpdated }/" \
  | jq --slurp . >&3
  exit 0
fi
elif [[ "$(getParameter .source.cache)" != null ]]; then
  set +e
  CACHE_USERNAME="$(getParameter .source.cache.username)"
  CACHE_PASSWORD="$(getParameter .source.cache.password)"
  CACHE_SERVER="$(getParameter .source.cache.server)"
  CACHE_PATH="$(getParameter .source.cache.path)"
  CACHE_FILE="$(getParameter .source.cache.file)" 
  VERSION=1
   [[ "$CACHE_USERNAME" != null ]] && curl -k -u "$CACHE_USERNAME:$CACHE_PASSWORD" --output "space.tmp" "${CACHE_SERVER}${CACHE_PATH}${CACHE_FILE}.space" && VERSION=`cat space.tmp`
  set -e
fi

if [[ $VERSION = null ]] || [ $VERSION = "" ]; then
VERSION=1
fi

jq -n "[{version: \"$VERSION\"}
]" >&3
